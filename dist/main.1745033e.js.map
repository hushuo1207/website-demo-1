{"version":3,"sources":["main.js"],"names":["$siteList","$","$lastLi","find","x","localStorage","getItem","xObject","JSON","parse","hashMap","logo","localType","url","simplifyUrl","replace","render","remove","forEach","node","index","$li","insertBefore","on","e","window","open","stopPropagation","splice","prompt","indexOf","console","log","push","toUpperCase","logoType","onbeforeunload","str","stringify","setItem","document","key","i","length","toLowerCase"],"mappings":";AACA,IAAMA,EAAYC,EAAE,aACdC,EAAUF,EAAUG,KAAK,WACzBC,EAAIC,aAAaC,QAAQ,KACzBC,EAAUC,KAAKC,MAAML,GAGrBM,EAAUH,GAAW,CACvB,CAAEI,KAAO,IAAKC,UAAW,OAAQC,IAAK,wBACtC,CACIF,KAAO,IACPC,UAAW,MACXC,IAAK,6BAGPC,EAAc,SAACD,GACVA,OAAAA,EAAIE,QAAQ,WAAY,IAAIA,QAAQ,UAAW,IAAIA,QAAQ,OAAO,IAAIA,QAAQ,QAAU,KAG7FC,EAAS,SAATA,IACFhB,EAAUG,KAAK,iBAAiBc,SAChCP,EAAQQ,QAAQ,SAACC,EAAMC,GACbC,IAAAA,EAAMpB,EAEoBkB,mFAAAA,OAAAA,EAAKR,KAAK,GACVG,kDAAAA,OAAAA,EAAYK,EAAKN,KAHrC,sQAUJS,aAAapB,GACrBmB,EAAIE,GAAG,QAAS,SAACC,GACbC,OAAOC,KAAKP,EAAKN,OAErBQ,EAAIE,GAAG,QAAS,SAAU,SAACC,GACvBA,EAAEG,kBACFjB,EAAQkB,OAAOR,EAAO,GACtBJ,SAIZA,IAEAf,EAAE,cAAcsB,GAAG,QAAS,WACpBV,IAAAA,EAAMY,OAAOI,OAAO,eACG,IAAxBhB,EAAIiB,QAAQ,UACXjB,EAAM,WAAaA,GAEvBkB,QAAQC,IAAInB,GACZH,EAAQuB,KAAK,CACTtB,KAAMG,EAAYD,GAAK,GAAGqB,cAC1BC,SAAU,OACVtB,IAAKA,IAETG,MAGJS,OAAOW,eAAiB,WACdC,IAAAA,EAAM7B,KAAK8B,UAAU5B,GAC3BL,aAAakC,QAAQ,IAAKF,IAG9BpC,EAAEuC,UAAUjB,GAAG,WAAY,SAACC,GACxBO,QAAQC,IAAIR,EAAEiB,KAET,IADEA,IAAAA,EAAOjB,EAAPiB,IACEC,EAAI,EAAGA,EAAIhC,EAAQiC,OAAQD,IAC5BhC,EAAQgC,GAAG/B,KAAKiC,gBAAkBH,GAClChB,OAAOC,KAAKhB,EAAQgC,GAAG7B","file":"main.1745033e.js","sourceRoot":"..\\src","sourcesContent":["\r\nconst $siteList = $(\".siteList\");\r\nconst $lastLi = $siteList.find(\"li.last\");\r\nconst x = localStorage.getItem('x');\r\nconst xObject = JSON.parse(x);\r\n\r\n\r\nconst hashMap = xObject || [\r\n    { logo : 'A', localType: 'text', url: 'https://www.acfun.cn'},\r\n    {\r\n        logo : 'B',\r\n        localType: 'img',\r\n        url: 'https://www.bilibili.com'\r\n    }\r\n]\r\nconst simplifyUrl = (url) => {\r\n    return url.replace('https://', '').replace('http://', '').replace('www.','').replace('/\\/.*/', '')\r\n} //删除/ 开头之后的内容\r\n\r\nconst render = () => {\r\n    $siteList.find('li:not(.last)').remove();\r\n    hashMap.forEach((node, index) => {\r\n        const $li = $(`<li>\r\n                <div class=\"site\">\r\n                    <div class=\"logo\">${node.logo[0]}</div>\r\n                    <div class=\"link\">${simplifyUrl(node.url)}</div>\r\n                    <div class=\"close\">\r\n                        <svg class=\"icon\" >\r\n                            <use xlink:href=\"#icon-close\"></use>\r\n                        </svg>\r\n                    </div>\r\n                </div>\r\n        </li>`).insertBefore($lastLi)\r\n        $li.on('click', (e) => {\r\n            window.open(node.url)\r\n        })\r\n        $li.on('click', '.close', (e) => {\r\n            e.stopPropagation()  //阻止冒泡\r\n            hashMap.splice(index, 1)\r\n            render()\r\n        })\r\n    })\r\n}\r\nrender()\r\n\r\n$('.addButton').on('click', () => {\r\n    let url = window.prompt('请问你要输入的网址是?')\r\n    if(url.indexOf('http') !== 0) {\r\n        url = 'https://' + url\r\n    }\r\n    console.log(url)\r\n    hashMap.push({\r\n        logo: simplifyUrl(url)[0].toUpperCase(),\r\n        logoType: \"text\",\r\n        url: url\r\n    });\r\n    render();\r\n});\r\n\r\nwindow.onbeforeunload = () => {\r\n    const str = JSON.stringify(hashMap);\r\n    localStorage.setItem('x', str)\r\n}\r\n\r\n$(document).on('keypress', (e) => {\r\n    console.log(e.key)\r\n    const {key} = e;\r\n    for (let i = 0; i < hashMap.length; i++){\r\n        if (hashMap[i].logo.toLowerCase() === key){\r\n            window.open(hashMap[i].url)\r\n        }\r\n    }\r\n})\r\n\r\n//路径\r\n// parcel build src/index.html --no-minify --public-url https://.../dist\r\n\r\n//或者 parcel build src/index.html --no-minify --public-url ./\r\n"]}